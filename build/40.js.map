{"version":3,"sources":["../../src/core/login/pages/confirmexistingpin/confirmexistingpin.module.ts","../../src/core/login/pages/confirmexistingpin/Confirmexistingpin.ts"],"names":[],"mappings":"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","file":"40.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ConfirmexistingpinPage } from './Confirmexistingpin';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConfirmexistingpinPage,\r\n  ],\r\n  imports: [\r\n    CoreComponentsModule,\r\n    CoreDirectivesModule,\r\n    IonicPageModule.forChild(ConfirmexistingpinPage),\r\n    TranslateModule.forChild()\r\n  ],\r\n})\r\nexport class ConfirmexistingpinPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/confirmexistingpin/confirmexistingpin.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CoreAppProvider } from '@providers/app';\r\nimport { CoreEventsProvider } from '@providers/events';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreLoginHelperProvider } from '../../providers/helper';\r\nimport { CoreConfigConstants } from '../../../../configconstants';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n/**\r\n * Generated class for the ConfirmexistingpinPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-confirmexistingpin',\r\n  templateUrl: 'confirmexistingpin.html',\r\n})\r\nexport class ConfirmexistingpinPage {\r\n\r\n  credForm: FormGroup;\r\n  siteUrl: string;\r\n  siteChecked = false;\r\n  siteName: string;\r\n  logoUrl: string;\r\n  authInstructions: string;\r\n  canSignup: boolean;\r\n  identityProviders: any[];\r\n  pageLoaded = false;\r\n  isBrowserSSO = false;\r\n  isFixedUrlSet = false;\r\n  setPinBtnLabel: string;\r\n  setPinTitle: string;\r\n\r\n  protected siteConfig;\r\n  protected eventThrown = false;\r\n  protected viewLeft = false;\r\n  protected siteId: string;\r\n  protected urlToOpen: string;\r\n\r\n  constructor(private navCtrl: NavController, fb: FormBuilder, private appProvider: CoreAppProvider,\r\n    private sitesProvider: CoreSitesProvider, private loginHelper: CoreLoginHelperProvider,\r\n    private domUtils: CoreDomUtilsProvider, private translate: TranslateService,\r\n    private eventsProvider: CoreEventsProvider) {\r\n\r\n    this.credForm = fb.group({\r\n      currentpin: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('[0-9]{6}')]],\r\n      setpin: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('[0-9]{6}')]],\r\n      confirmpin: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('[0-9]{6}')]]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * View loaded.\r\n   */\r\n  ionViewDidLoad(): void {\r\n    this.treatSiteConfig();\r\n    this.isFixedUrlSet = this.loginHelper.isFixedUrlSet();\r\n\r\n    if (this.isFixedUrlSet) {\r\n      // Fixed URL, we need to check if it uses browser SSO login.\r\n      this.checkSite(this.siteUrl);\r\n    } else {\r\n      this.siteChecked = true;\r\n      this.pageLoaded = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * View left.\r\n   */\r\n  ionViewDidLeave(): void {\r\n    this.viewLeft = true;\r\n    this.eventsProvider.trigger(CoreEventsProvider.LOGIN_SITE_UNCHECKED, { config: this.siteConfig }, this.siteId);\r\n  }\r\n\r\n  /**\r\n   * Check if a site uses local_mobile, requires SSO login, etc.\r\n   * This should be used only if a fixed URL is set, otherwise this check is already performed in CoreLoginSitePage.\r\n   *\r\n   * @param {string} siteUrl Site URL to check.\r\n   * @return {Promise<any>} Promise resolved when done.\r\n   */\r\n  protected checkSite(siteUrl: string): Promise<any> {\r\n    this.pageLoaded = false;\r\n\r\n    siteUrl = CoreConfigConstants.siteurl;\r\n    // If the site is configured with http:// protocol we force that one, otherwise we use default mode.\r\n    const protocol = siteUrl.indexOf('http://') === 0 ? 'http://' : undefined;\r\n\r\n    return this.sitesProvider.checkSite(siteUrl, protocol).then((result) => {\r\n\r\n      this.siteChecked = true;\r\n      this.siteUrl = result.siteUrl;\r\n\r\n      this.siteConfig = result.config;\r\n      this.treatSiteConfig();\r\n\r\n      if (result && result.warning) {\r\n        this.domUtils.showErrorModal(result.warning, true, 4000);\r\n      }\r\n\r\n      if (this.loginHelper.isSSOLoginNeeded(result.code)) {\r\n        // SSO. User needs to authenticate in a browser.\r\n        this.isBrowserSSO = true;\r\n\r\n        // Check that there's no SSO authentication ongoing and the view hasn't changed.\r\n        if (!this.appProvider.isSSOAuthenticationOngoing() && !this.viewLeft) {\r\n          this.loginHelper.confirmAndOpenBrowserForSSOLogin(\r\n            result.siteUrl, result.code, result.service, result.config && result.config.launchurl);\r\n        }\r\n      } else {\r\n        this.isBrowserSSO = false;\r\n      }\r\n\r\n    }).catch((error) => {\r\n      this.domUtils.showErrorModal(error);\r\n    }).finally(() => {\r\n      this.pageLoaded = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Treat the site configuration (if it exists).\r\n   */\r\n  protected treatSiteConfig(): void {\r\n    if (this.siteConfig) {\r\n      this.siteName = this.siteConfig.sitename;\r\n      this.logoUrl = this.siteConfig.logourl || this.siteConfig.compactlogourl;\r\n      this.authInstructions = this.siteConfig.authinstructions || this.translate.instant('core.login.loginsteps');\r\n      this.canSignup = this.siteConfig.registerauth == 'email' && !this.loginHelper.isEmailSignupDisabled(this.siteConfig);\r\n      this.identityProviders = this.loginHelper.getValidIdentityProviders(this.siteConfig);\r\n\r\n      if (!this.eventThrown && !this.viewLeft) {\r\n        this.eventThrown = true;\r\n        this.eventsProvider.trigger(CoreEventsProvider.LOGIN_SITE_CHECKED, { config: this.siteConfig });\r\n      }\r\n    } else {\r\n      this.siteName = null;\r\n      this.logoUrl = null;\r\n      this.authInstructions = null;\r\n      this.canSignup = false;\r\n      this.identityProviders = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the Pin of the user of his own choice.\r\n   *\r\n   */\r\n  confirmExistingPIN() {\r\n    \r\n    const currentpin = this.credForm.value.currentpin,\r\n      pin = this.credForm.value.setpin,\r\n      confirmpin = this.credForm.value.confirmpin;\r\n\r\n    if ((pin != confirmpin)) {\r\n      this.domUtils.showErrorModal(\"Confirm PIN doesn't match with the PIN you enter\", true);\r\n\r\n      return;\r\n    }\r\n\r\n    var siteid = this.sitesProvider.getCurrentSiteId();\r\n\r\n    this.sitesProvider.getSite(siteid).then((site) => {\r\n      const params = {\r\n        currentpin: currentpin\r\n      };\r\n      const preSets = {\r\n        getFromCache: false\r\n      };\r\n      return site.read('check_user_current_pin', params, preSets).then((data) => {\r\n        if (data.status) {\r\n          const params = {\r\n            pin: pin\r\n          };\r\n          return site.write('set_user_pin', params).then((data) => {\r\n            if (data.status) {\r\n              this.domUtils.showAlert(\"Success\", this.translate.instant('core.login.custom.pinupdatesuccessmessage'));\r\n              this.navCtrl.push('CoreMainMenuPage');\r\n            } else {\r\n              this.domUtils.showErrorModal(\"There is an issue while setting up the PIN please try again after some time\", true);\r\n            }\r\n          }).catch(() => {\r\n            // Unable to get mime type, assume it's not supported.\r\n          })\r\n        } else {\r\n          this.domUtils.showErrorModal(\"core.login.custom.invalidsexistingpin\", true);\r\n        }\r\n      }).catch(() => {\r\n        \r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/confirmexistingpin/Confirmexistingpin.ts"],"sourceRoot":""}