{"version":3,"sources":["../../src/core/login/pages/otpscreen/otpscreen.module.ts","../../src/core/login/pages/otpscreen/Otpscreen.ts"],"names":[],"mappings":"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","file":"34.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { OtpscreenPage } from './Otpscreen';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OtpscreenPage,\r\n  ],\r\n  imports: [\r\n    CoreComponentsModule,\r\n    CoreDirectivesModule,\r\n    IonicPageModule.forChild(OtpscreenPage),\r\n    TranslateModule.forChild()\r\n  ],\r\n})\r\nexport class OtpscreenPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/otpscreen/otpscreen.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CoreAppProvider } from '@providers/app';\r\nimport { CoreEventsProvider } from '@providers/events';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\n// import { CoreSite } from '@classes/site';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreUtilsProvider } from '@providers/utils/utils';\r\nimport { CoreLoginHelperProvider } from '../../providers/helper';\r\nimport { CoreContentLinksDelegate } from '@core/contentlinks/providers/delegate';\r\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n/**\r\n * Generated class for the OtploginPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage({ segment: 'page-otpscreen' })\r\n@Component({\r\n  selector: 'page-otpscreen',\r\n  templateUrl: 'otpscreen.html',\r\n})\r\nexport class OtpscreenPage {\r\n  credForm: FormGroup;\r\n  siteUrl: string;\r\n  pfnumber: string;\r\n  phone_number: string;\r\n  siteChecked = false;\r\n  siteName: string;\r\n  logoUrl: string;\r\n  authInstructions: string;\r\n  canSignup: boolean;\r\n  identityProviders: any[];\r\n  pageLoaded = false;\r\n  isBrowserSSO = false;\r\n  isFixedUrlSet = false;\r\n\r\n  protected siteConfig;\r\n  protected eventThrown = false;\r\n  protected viewLeft = false;\r\n  protected siteId: string;\r\n  protected urlToOpen: string;\r\n\r\n  constructor(private navCtrl: NavController, navParams: NavParams, fb: FormBuilder, private appProvider: CoreAppProvider,\r\n    private sitesProvider: CoreSitesProvider, private loginHelper: CoreLoginHelperProvider,\r\n    private domUtils: CoreDomUtilsProvider, private translate: TranslateService, private utils: CoreUtilsProvider,\r\n    private eventsProvider: CoreEventsProvider, private contentLinksDelegate: CoreContentLinksDelegate,\r\n    private contentLinksHelper: CoreContentLinksHelperProvider) {\r\n\r\n    this.siteUrl = navParams.get('siteUrl');\r\n    this.siteConfig = navParams.get('siteConfig');\r\n    this.urlToOpen = navParams.get('urlToOpen');\r\n    this.pfnumber = navParams.get('pfnumber');\r\n    this.phone_number = navParams.get('phone_number');\r\n\r\n    this.credForm = fb.group({\r\n      otp: ['', [Validators.required,\r\n        Validators.minLength(6), Validators.maxLength(6), Validators.pattern('[0-9]{6}')]]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * View loaded.\r\n   */\r\n  ionViewDidLoad(): void {\r\n    this.treatSiteConfig();\r\n    this.isFixedUrlSet = this.loginHelper.isFixedUrlSet();\r\n\r\n    if (this.isFixedUrlSet) {\r\n      // Fixed URL, we need to check if it uses browser SSO login.\r\n      this.checkSite(this.siteUrl);\r\n    } else {\r\n      this.siteChecked = true;\r\n      this.pageLoaded = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * View left.\r\n   */\r\n  ionViewDidLeave(): void {\r\n    this.viewLeft = true;\r\n    this.eventsProvider.trigger(CoreEventsProvider.LOGIN_SITE_UNCHECKED, { config: this.siteConfig }, this.siteId);\r\n  }\r\n\r\n  /**\r\n   * Check if a site uses local_mobile, requires SSO login, etc.\r\n   * This should be used only if a fixed URL is set, otherwise this check is already performed in CoreLoginSitePage.\r\n   *\r\n   * @param {string} siteUrl Site URL to check.\r\n   * @return {Promise<any>} Promise resolved when done.\r\n   */\r\n  protected checkSite(siteUrl: string): Promise<any> {\r\n    this.pageLoaded = false;\r\n\r\n    // If the site is configured with http:// protocol we force that one, otherwise we use default mode.\r\n    const protocol = siteUrl.indexOf('http://') === 0 ? 'http://' : undefined;\r\n\r\n    return this.sitesProvider.checkSite(siteUrl, protocol).then((result) => {\r\n\r\n      this.siteChecked = true;\r\n      this.siteUrl = result.siteUrl;\r\n\r\n      this.siteConfig = result.config;\r\n      this.treatSiteConfig();\r\n\r\n      if (result && result.warning) {\r\n        this.domUtils.showErrorModal(result.warning, true, 4000);\r\n      }\r\n\r\n      if (this.loginHelper.isSSOLoginNeeded(result.code)) {\r\n        // SSO. User needs to authenticate in a browser.\r\n        this.isBrowserSSO = true;\r\n\r\n        // Check that there's no SSO authentication ongoing and the view hasn't changed.\r\n        if (!this.appProvider.isSSOAuthenticationOngoing() && !this.viewLeft) {\r\n          this.loginHelper.confirmAndOpenBrowserForSSOLogin(\r\n            result.siteUrl, result.code, result.service, result.config && result.config.launchurl);\r\n        }\r\n      } else {\r\n        this.isBrowserSSO = false;\r\n      }\r\n\r\n    }).catch((error) => {\r\n      this.domUtils.showErrorModal(error);\r\n    }).finally(() => {\r\n      this.pageLoaded = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Treat the site configuration (if it exists).\r\n   */\r\n  protected treatSiteConfig(): void {\r\n    if (this.siteConfig) {\r\n      this.siteName = this.siteConfig.sitename;\r\n      this.logoUrl = this.siteConfig.logourl || this.siteConfig.compactlogourl;\r\n      this.authInstructions = this.siteConfig.authinstructions || this.translate.instant('core.login.loginsteps');\r\n      this.canSignup = this.siteConfig.registerauth == 'email' && !this.loginHelper.isEmailSignupDisabled(this.siteConfig);\r\n      this.identityProviders = this.loginHelper.getValidIdentityProviders(this.siteConfig);\r\n\r\n      if (!this.eventThrown && !this.viewLeft) {\r\n        this.eventThrown = true;\r\n        this.eventsProvider.trigger(CoreEventsProvider.LOGIN_SITE_CHECKED, { config: this.siteConfig });\r\n      }\r\n    } else {\r\n      this.siteName = null;\r\n      this.logoUrl = null;\r\n      this.authInstructions = null;\r\n      this.canSignup = false;\r\n      this.identityProviders = [];\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Tries to authenticate the user.\r\n   *\r\n   * @param {Event} [e] Event.\r\n   */\r\n  LoginUsingOTP(e?: Event): Promise<void> {\r\n\r\n    // Get input data.\r\n    const siteUrl = this.siteUrl,\r\n      otp = this.credForm.value.otp;\r\n\r\n    if (!otp) {\r\n      this.domUtils.showErrorModal('OTP is required', true);\r\n      return;\r\n    }\r\n   \r\n    if (otp.length != 6) {\r\n      this.domUtils.showErrorModal('Invalid OTP, please try again.', true);\r\n      return;      \r\n    }\r\n\r\n    const modal = this.domUtils.showModalLoading();\r\n\r\n    // Start the authentication process.\r\n    this.sitesProvider.getUserTokenFromPin(siteUrl, this.pfnumber, otp, true).then((data) => {\r\n        return this.sitesProvider.newSite(data.siteUrl, data.token, data.privateToken).then((id) => {\r\n            this.credForm.controls['otp'].reset();\r\n            this.siteId = id;\r\n\r\n            if (this.urlToOpen) {\r\n                // There's a content link to open.\r\n                return this.contentLinksDelegate.getActionsFor(this.urlToOpen, undefined, this.pfnumber).then((actions) => {\r\n                    const action = this.contentLinksHelper.getFirstValidAction(actions);\r\n                    if (action && action.sites.length) {\r\n                        // Action should only have 1 site because we're filtering by username.\r\n                        action.action(action.sites[0]);\r\n                    } else {\r\n                        return this.loginHelper.goToSiteInitialPage();\r\n                    }\r\n                });\r\n            } else {\r\n                return this.appProvider.getRootNavController().push('SetpinPage');\r\n            }\r\n        });\r\n    }).catch((error) => {\r\n// tslint:disable-next-line: no-console\r\n        console.log(error);\r\n        this.loginHelper.treatUserTokenError(siteUrl, error, this.pfnumber, otp);\r\n    }).finally(() => {\r\n        modal.dismiss();\r\n    });\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/otpscreen/Otpscreen.ts"],"sourceRoot":""}